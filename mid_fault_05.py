# -*- coding: utf-8 -*-
"""mid-fault-05.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HRGEM6HP7jTAzF8u2o6eX2TAudPZFhpw
"""

#### Fault Tolerant System Design MidTerm
#### Question 5
#### code by: Yegane Aghamohammadi 
#### Student ID: 98208581

#libraries: 
import pandas
import numpy as np
import csv

'Here I generate a matrix for student scores'
'Since we have 100 students and each has 15 subjects, '
'I generate a 100*15 matrix, each element is an integer between 12 and 20'
'Then I saved the matrix into a csv file to use it in the future.'

random_matrix = np.random.randint(12,20,((100,15)))
dataframe_array= pandas.DataFrame(random_matrix)
dataframe_array.to_csv('scores01.csv')

############ $$$$$$$$$ NOT a MAIN loop!
'# First I open the first csv file which contains the scores of each students'
'# Then I calculate the average of each student and add it to a list called listofscores01'
"# I consider 5 bits for the integer part and 2 bits for the fractional part"

listofscores01 = []
ins = open("scores0001.csv", "rt")
b=1
for row in csv.reader(ins):
  bitcheck = sum(map(int, row))
  while int((bitcheck)/2) !=0:
    bitcheck = bitcheck/2
    b +=1
    if b >=10:
      print('This is bad')
  b=1
  var = sum(map(int, row))/15
  newvar = var - int(var)
  thenew = int(newvar*32)
  avg = int(var) + (thenew/32)
  listofscores01.append(avg)
ins.close()


'# Here are the second and third files'

listofscores02 = []
ins = open("scores0002.csv", "rt")
t=1
for row in csv.reader(ins):
  bitcheck = sum(map(int, row))
  while int((bitcheck)/2) !=0:
    bitcheck = bitcheck/2
    t +=1
    if t >=10:
      print('This is bad')
  t=1
  var = sum(map(int, row))/15
  newvar = var - int(var)
  thenew = int(newvar*32)
  avg = int(var) + (thenew/32)
  listofscores02.append(avg)
ins.close()


listofscores03 = []
ins = open("scores0003.csv", "rt")
p=1
for row in csv.reader(ins):
  bitcheck = sum(map(int, row))
  while int((bitcheck)/2) !=0:
    bitcheck = bitcheck/2
    p +=1
    if p >=10:
      print('This is bad')
  p=1
  var = sum(map(int, row))/15
  newvar = var - int(var)
  thenew = int(newvar*32)
  avg = int(var) + (thenew/32)
  listofscores03.append(avg)
ins.close()


'# In the section, I"m gonna check whether or not a score fits 5 bits. '
'# First I need a copy of each list'

copy01 = listofscores01
copy02 = listofscores02
copy03 = listofscores03


m=1
for i in range(len(copy01)):
  while int((copy01[i])/2) !=0:
    m += 1
    copy01[i] = copy01[i]/2
    if m>=6:
      print('This is not good')
  m=1

n=1
for i in range(len(copy02)):
  while int((copy02[i])/2) !=0:
    n += 1
    copy02[i] = copy02[i]/2
    if n>=6:
      print('This is not good')
  n=1

k=1
for i in range(len(copy03)):
  while int((copy03[i])/2) !=0:
    k += 1
    copy03[i] = copy03[i]/2
    if k>=6:
      print('This is not good')
  k=1

listofscores01 = []
ins = open("scores0001.csv", "rt")
b=1
for row in csv.reader(ins):
  var = sum(map(int, row))/15
  listofscores01.append(var)
ins.close()


'# Here are the second and third files'

listofscores02 = []
ins = open("scores0002.csv", "rt")
t=1
for row in csv.reader(ins):
  var = sum(map(int, row))/15
  listofscores02.append(var)
ins.close()


listofscores03 = []
ins = open("scores0003.csv", "rt")
p=1
for row in csv.reader(ins):
  var = sum(map(int, row))/15
  listofscores03.append(var)
ins.close()

'# Here is the voter function'
def voter(x,y,z):
  if x == y:
    return x
  elif x==z:
    return z
  elif y==z:
    return y


'# In the following loop, I will vote between the three lists, '
'# then I will add them into the final list called final_scores'

final_scores=[]
for i in range(len(listofscores01)):
  final_scores.append(voter(listofscores01[i],listofscores02[i],listofscores03[i]))

'# In order to keep the student ID,'
'# I create a dictionary called dict_scores'
'# and assign each score to the particular student.'
'# Student IDs are from 0 to 100'

dict_scores = {}
for i in range(len(final_scores)):
  dict_scores[i+1] = final_scores[i]

'# After creating the dictionary, '
"# it's the time to sort the students with their scores"
'# The "sorted_dict" is the dictionary of the sorted students '
'# from the highest average to the lowest'
'# The sorted dictionary shows the Student ID as well as the score he/she got'

sorted_values = sorted(dict_scores.values(),reverse=True) # Sort the values
sorted_dict = {}

for i in sorted_values:
  for k in dict_scores.keys():
    if dict_scores[k] == i:
      sorted_dict[k] = dict_scores[k]            
print(sorted_dict)